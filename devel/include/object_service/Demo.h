// Generated by gencpp from file object_service/Demo.msg
// DO NOT EDIT!


#ifndef OBJECT_SERVICE_MESSAGE_DEMO_H
#define OBJECT_SERVICE_MESSAGE_DEMO_H

#include <ros/service_traits.h>


#include <object_service/DemoRequest.h>
#include <object_service/DemoResponse.h>


namespace object_service
{

struct Demo
{

typedef DemoRequest Request;
typedef DemoResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Demo
} // namespace object_service


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::object_service::Demo > {
  static const char* value()
  {
    return "e73bb3e5b83204b20d5efa72a500bbb3";
  }

  static const char* value(const ::object_service::Demo&) { return value(); }
};

template<>
struct DataType< ::object_service::Demo > {
  static const char* value()
  {
    return "object_service/Demo";
  }

  static const char* value(const ::object_service::Demo&) { return value(); }
};


// service_traits::MD5Sum< ::object_service::DemoRequest> should match
// service_traits::MD5Sum< ::object_service::Demo >
template<>
struct MD5Sum< ::object_service::DemoRequest>
{
  static const char* value()
  {
    return MD5Sum< ::object_service::Demo >::value();
  }
  static const char* value(const ::object_service::DemoRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::object_service::DemoRequest> should match
// service_traits::DataType< ::object_service::Demo >
template<>
struct DataType< ::object_service::DemoRequest>
{
  static const char* value()
  {
    return DataType< ::object_service::Demo >::value();
  }
  static const char* value(const ::object_service::DemoRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::object_service::DemoResponse> should match
// service_traits::MD5Sum< ::object_service::Demo >
template<>
struct MD5Sum< ::object_service::DemoResponse>
{
  static const char* value()
  {
    return MD5Sum< ::object_service::Demo >::value();
  }
  static const char* value(const ::object_service::DemoResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::object_service::DemoResponse> should match
// service_traits::DataType< ::object_service::Demo >
template<>
struct DataType< ::object_service::DemoResponse>
{
  static const char* value()
  {
    return DataType< ::object_service::Demo >::value();
  }
  static const char* value(const ::object_service::DemoResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // OBJECT_SERVICE_MESSAGE_DEMO_H
