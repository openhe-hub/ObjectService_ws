// Generated by gencpp from file object_service/Test.msg
// DO NOT EDIT!


#ifndef OBJECT_SERVICE_MESSAGE_TEST_H
#define OBJECT_SERVICE_MESSAGE_TEST_H

#include <ros/service_traits.h>


#include <object_service/TestRequest.h>
#include <object_service/TestResponse.h>


namespace object_service
{

struct Test
{

typedef TestRequest Request;
typedef TestResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Test
} // namespace object_service


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::object_service::Test > {
  static const char* value()
  {
    return "645c2ebd161afbc4888fe6d5e4012e2f";
  }

  static const char* value(const ::object_service::Test&) { return value(); }
};

template<>
struct DataType< ::object_service::Test > {
  static const char* value()
  {
    return "object_service/Test";
  }

  static const char* value(const ::object_service::Test&) { return value(); }
};


// service_traits::MD5Sum< ::object_service::TestRequest> should match
// service_traits::MD5Sum< ::object_service::Test >
template<>
struct MD5Sum< ::object_service::TestRequest>
{
  static const char* value()
  {
    return MD5Sum< ::object_service::Test >::value();
  }
  static const char* value(const ::object_service::TestRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::object_service::TestRequest> should match
// service_traits::DataType< ::object_service::Test >
template<>
struct DataType< ::object_service::TestRequest>
{
  static const char* value()
  {
    return DataType< ::object_service::Test >::value();
  }
  static const char* value(const ::object_service::TestRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::object_service::TestResponse> should match
// service_traits::MD5Sum< ::object_service::Test >
template<>
struct MD5Sum< ::object_service::TestResponse>
{
  static const char* value()
  {
    return MD5Sum< ::object_service::Test >::value();
  }
  static const char* value(const ::object_service::TestResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::object_service::TestResponse> should match
// service_traits::DataType< ::object_service::Test >
template<>
struct DataType< ::object_service::TestResponse>
{
  static const char* value()
  {
    return DataType< ::object_service::Test >::value();
  }
  static const char* value(const ::object_service::TestResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // OBJECT_SERVICE_MESSAGE_TEST_H
